<project name="InventoryManager_RPC_Gilead_M" default="compile" basedir=".">
	<!-- Name of project and version -->
	<property name="proj.name" value="InventoryManager_RPC_Gilead_M"/>
	<property name="proj.version" value="1.0"/>
		
	<!-- Global properties for this build -->
	<property name="src.java.dir" value="src"/>
	<property name="lib.dir" value="lib"/>
	<property name="build.dir" value="bin"/>
	
	<include file="build_eclipse.xml"></include>

	<!-- Classpath declaration -->
	<path id="project.classpath">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
			<include name="**/*.zip"/>
		</fileset>
		<path refid="InventoryManager_RPC_Gilead_M.classpath"/>
	</path>
	

	<!-- Useful shortcuts -->
	<patternset id="meta.files">
		<include name="**/*.xml"/>
		<include name="**/*.properties"/>
	</patternset>
	
	<!-- Clean up -->
	<target name="cleanhibernate">
		<delete dir="${build.dir}"/>
		<mkdir dir="${build.dir}"/>
	</target>
	
	<!-- Compile Java source -->
	<target name="compile" depends="cleanhibernate">
		<mkdir dir="${build.dir}"/>
		<javac
			srcdir="${src.java.dir}"
			destdir="${build.dir}"
			nowarn="on">
			<classpath refid="project.classpath"/>
		</javac>
	</target>
	
	<!-- Copy metadata to build classpath -->
	<property name="src.etc.dir" value="etc"/>
	<target name="copymetafiles">
		
		<!-- Copy metadata to build -->
		<copy todir="${build.dir}">
			<fileset dir="${src.java.dir}">
				<patternset refid="meta.files"/>
			</fileset>
		</copy>
		
		<!-- Copy configuration files from etc/ -->
		<copy todir="${build.dir}">
			<fileset dir="${src.etc.dir}">
				<patternset refid="meta.files"/>
			</fileset>
		</copy>
	</target>
	
	<!-- Run HelloWorld -->
	<target name="run" depends="compile, copymetafiles"
		description="Build and run HelloWorld">
		<java fork="true" classname="hello.HelloWorld">
			<classpath>
				<pathelement location="${build.dir}"/>
				<path refid="project.classpath"/>
			</classpath>
		</java>
	</target>

	<!-- Run LoadTestData -->
	<target name="run_LoadTestData" depends="compile, copymetafiles"
		description="Build and run LoadTestData">
		<java fork="true" classname="com.aeryinnovations.testdata.LoadTestData">
			<classpath>
				<pathelement location="${build.dir}"/>
				<path refid="project.classpath"/>
			</classpath>
		</java>
	</target>
	
	<!-- Run TestSpareRegister -->
	<target name="run_TestSpareRegister" depends="compile, copymetafiles"
		description="Build and run LoadTestData">
		<java fork="true" classname="com.aeryinnovations.shared.tests.TestSpareRegister">
			<classpath>
				<pathelement location="${build.dir}"/>
				<path refid="project.classpath"/>
			</classpath>
		</java>
	</target>
					
	<target name="cleandb">
		<!-- Copy empty database file to datasource -->
		<copy overwrite="true" file="/home/olamide/Downloads/newDB.mdb" todir="/home/olamide/Programming/filedatasources"/>
		<copy overwrite="true" file="/home/olamide/Downloads/newDBv2.accdb" todir="/home/olamide/Programming/filedatasources"/>

	</target>
	
	<taskdef name="hibernatetool"
		classname="org.hibernate.tool.ant.HibernateToolTask"
		classpathref="project.classpath"/>
	
	<target name="schemaexport" depends="compile, copymetafiles"
		description="Exports a generated schema to DB and file">
		
		<hibernatetool destdir="${basedir}">
			<classpath>
				<pathelement location="${build.dir}"/>
				<path refid="project.classpath"/>
			</classpath>
			
			<annotationconfiguration 
				configurationfile="${build.dir}/hibernate.cfg.xml"/>
			
			<hbm2ddl
				drop="true"
				create="true"
				export="true"
				outputfilename="helloworld-ddl.sql"
				delimiter=";"
				format="true"/>
		</hibernatetool>
	</target>
</project>